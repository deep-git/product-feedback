// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(uuid()) @map("_id")
  userId   String @unique
  name     String
  imageUrl String @db.String
  email    String @db.String

  role MemberRole @default(GUEST)

  feedback Feedback[]
  comment  Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Feedback {
  id       String   @id @default(uuid()) @map("_id")
  title    String
  category String
  details  String   @db.String
  likes    Int
  likedBy  String[]
  status   String?

  comment Comment[]

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Comment {
  id          String @id @default(uuid()) @map("_id")
  description String @db.String

  parentId String?

  feedbackId String
  feedback   Feedback @relation(fields: [feedbackId], references: [id], onDelete: Cascade)

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([feedbackId])
}
